/* Universal Css Property */

/* *
{
    margin: 0;
    padding: 0;
    box-sizing: border-box;
} */

.container
{
    border-style: solid;
    border-color: black;
    border-width: 20px;
    height: 100vh;
    display: flex;
}

/* 
Flex-Box 

A)  display: flex;    =>    -------------------

B)  flex-direction: 1) column 2) row 3) column-reverse 4) row-reverse

C)  algin-items: 

            1) Beginning

            i) start
            ii) self-start
            iii) flex-start
            iv) first-baseline

            2) Ending

            i) end
            ii) self-end
            iii) flex-end
            iv) last-baseline

            3) Center

            i) center

*/
.flex-main-1
{
    border-style: solid;
    border-color: grey;
    border-width: 20px;
    height: 50vh;
    width: 50vh;
    display: flex;
    flex-direction: row;
    align-items: center;
    background-color: white;
}

.flex-main-1 .flex-child-1-0
{
    width: 100px;
    height: 100px;
    background-color: orange;
}

.flex-main-1 .flex-child-1-1
{
    width: 100px;
    height: 100px;
    background-color: green;
}

.flex-main-1 .flex-child-1-2
{
    width: 100px;
    height: 100px;
    background-color: rebeccapurple;
}
/* 

D)  justify-content:

                1) Beginning   [property]-------------------
                
                i) start
                ii) left
                iii) flex-start
                
                2) Ending       -------------------[property]
                
                i) end         
                ii) right
                iii) flex-end 
                
                3) center       -----------[property]-----------
                
                i) center
                ii) space-around    --[prop]----[prop]----[prop]--
                iii) space-between    [prop]----[prop]----[prop]
                iv) space-evenly    ---[prop]---[prop]---[prop]---   

*/
.flex-main-2
{
    border-style: solid;
    border-color: red;
    border-width: 20px;
    height: 50vh;
    width: 50vh;
    background-color: azure;
    display: flex;
    flex-direction: row;
    align-items: start;
    justify-content: space-evenly;

}

.flex-main-2 .flex-child-2-0
{
    width: 100px;
    height: 100px;
    background-color: black;
}

.flex-main-2 .flex-child-2-1
{
    width: 100px;
    height: 100px;
    background-color: rgb(61, 125, 0);
}

.flex-main-2 .flex-child-2-2
{
    width: 100px;
    height: 100px;
    background-color: tomato;
}

/* --------------------------------------Another Flex--------------------------------------------- */

/* 

E) flex-wrap: 

1) Flex Wrap ==> Responsive type

F) align-content:

1) Beginning
           

*/

.flex-main-content
{
    border-style: solid;
    border-color: red;
    border-width: 20px;
    height: 100vh;
    display: flex;
    flex-wrap: wrap;
    align-content: flex-start;
    /* 
    
    flex-flow: column wrap;    ==> Shorthand property in flex

    1) flex-direction 
    2) flex-warp 

    flex-flow: (flex-direction) (flex-wrap);
    
    */
}

.flex-main-content .flex-1
{
    width: 200px;
    height: 200px;
    background-color: orange;
}

.flex-main-content .flex-2
{
    width: 200px;
    height: 200px;
    background-color: green;
}

.flex-main-content .flex-3
{
    width: 200px;
    height: 200px;
    background-color: rebeccapurple;
}

.flex-main-content .flex-4
{
    width: 200px;
    height: 200px;
    background-color: slateblue;
}


/* -------------------------------------------------Flex Child Property--------------------------------------------------------------- */


/* 

order property in css

order: number;

item ordering

flex-grow ==> it is used to extra space avoiding for flex

flex-grow: number; 
n   ^
    |
    |
    |
    |
1   |

algin-self: 



flex-basis: px;  ==> it is used to responsive align 
*/
.flex-child-property
{
    border: 20px solid green;
    height: 100vh;
    display: flex;
    flex-direction: row;
    justify-content: space-between;
    flex-wrap: wrap;
    /* align-content: flex-start; */
    /* 
    child using align-self property is not work
    */
}

.flex-child-property .child-flex-1
{
    /* width: 200px; */
    height: 200px;
    background-color: blue;
    order: 3;
    flex: 1 1 300px; 
    align-self: center; 
    /* 
    Shorthand Property in child flex

    flex: (flex-grow) (flex-shrink) (flex-basis);

    */
}

.flex-child-property .child-flex-2
{
    width: 200px;
    height: 200px;
    background-color: cadetblue;
    order: 2;
    flex-grow: 1;
}

.flex-child-property .child-flex-3
{
    width: 200px;
    height: 200px;
    background-color: sienna;
    order: 4;
    flex-grow: 3;
    
}

.flex-child-property .child-flex-4
{
    /* width: 200px; */
    height: 200px;
    background-color: darkmagenta;
    order: 1;
    flex-basis: 200px;
}